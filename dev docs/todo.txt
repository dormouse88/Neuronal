Do Next
=======
---v---
	

General
=======
	Why CPU load + Framerate loss when exploded?
Visual / Interface
==================
	Draw slot valency number (to show how many slots are ignored in both directions) between handles and chips.
	Set discrete zoom levels + use a smarter better centering algo (like googlemaps).
	Solve: No space to see wires between exploded chips when adjacent. Disallow adjacency? Draw plan boundary half a cell inwards? (changing GRID_SIZE doesn't help exploded chips)
	Make wire text labels circle-shaped and place them intelligently (on wire but close to device).
	Allow chip cycling while unexploded and draw name on the handle.
	Choose highest number plan to load into an empty plan, not lowest.
	Plan Grabbers becoming a bit unnecessary. Only used for loading/saving now.
	View centers in wrong place in both: 1 Plan collapse and 2 Plan Load/Wipe
	Add a reset all charge button.
	Add a collapse all/expand! all button.
	Add a device copy button? (useful for non-empty handles)
	Add an encapsulate button. This will put all devices (and their wires) within a rectangular area bounded by the cursors into a newly created sub-plan. Fucking groovy. May require multiwires.

	HIG: Draw active name filter.

InnerSim
========
	Add in Plan Loading:
		db trimming,
		note attachments,
		read-only loading,
		containment tree traversal.

	Multichannel wire bug fixing:
		MED: Draw wires adjoining collapsed handles as bundles (perhaps only where multiple wires overlap?).
		LOW: Enable modifying the tags on wires (cursors would have to move if they are to keep selection of that wire) (currently just disallowed).
		LOW: adding a wire involving a port with the cursors reversed is highly surprising.

Inbetween
=========
	Split view for arena/brain
	Tools to make cat plans (plan exporting) (related to db trimming)
	Allow viewing of cat brains. (if only for debugging and level design)
	More robust XML loading (with feedback on failures)


OuterGame
=========
	Add goals
	Freezing cats


Don't Do This!
==============
Overhaul ownership (shared ptrs, weak ptrs, references, deletion, etc.)
	Devices own wires?
	Port-Arrays are their own entity- shared between handles and plans?
	Plans store handles and neurons separately to avoid RTTI?
	Wires have polymorphic plug ends to determine possible attributes (Tag, weight)?
	Eliminate InOut duplication?

